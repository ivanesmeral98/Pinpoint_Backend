# Generated by Django 3.1.4 on 2020-12-15 18:20

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CollaborativeMap',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('map_id', models.IntegerField(blank=True, null=True)),
                ('author', models.IntegerField(blank=True, null=True)),
                ('collaborator', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'collaborative_map',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Friendship',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'friendship',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Maps',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=128, null=True)),
                ('creator', models.CharField(blank=True, max_length=128, null=True)),
                ('city', models.CharField(blank=True, max_length=128, null=True)),
                ('state', models.CharField(blank=True, max_length=128, null=True)),
                ('country', models.CharField(blank=True, max_length=128, null=True)),
                ('is_collaborative', models.BooleanField(blank=True, null=True)),
                ('is_preview_allowed', models.BooleanField(blank=True, null=True)),
                ('is_public', models.BooleanField(blank=True, null=True)),
            ],
            options={
                'db_table': 'maps',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Notifications',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('is_read', models.BooleanField(blank=True, null=True)),
                ('content', models.CharField(blank=True, max_length=128, null=True)),
                ('caused_by', models.TextField(blank=True, null=True)),
                ('notif_image', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'notifications',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Pins',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=128, null=True)),
                ('rating', models.IntegerField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('pin_image', models.IntegerField(blank=True, null=True)),
                ('author', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'pins',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Requests',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('is_accepted', models.BooleanField(blank=True, null=True)),
                ('content', models.TextField(blank=True, null=True)),
                ('type', models.TextField(blank=True, null=True)),
                ('request_image', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'requests',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Reviews',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('is_good', models.BooleanField(blank=True, null=True)),
                ('comment', models.TextField(blank=True, null=True)),
                ('for_pin', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reviews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('type', models.CharField(blank=True, max_length=128, null=True)),
                ('image', models.IntegerField(blank=True, null=True)),
                ('text', models.CharField(blank=True, max_length=128, null=True)),
            ],
            options={
                'db_table': 'tag',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(blank=True, max_length=128, null=True)),
                ('personal_map', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'users',
                'managed': False,
            },
        ),
    ]
